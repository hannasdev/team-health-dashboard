name: Version and Release

on:
  push:
    branches:
      - main

jobs:
  version-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Check for version bump commit
        id: check_version_bump
        run: |
          if git log -1 --pretty=%B | grep -q "chore(release):"; then
            echo "is_version_bump=true" >> $GITHUB_OUTPUT
          else
            echo "is_version_bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Use Node.js
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        uses: actions/setup-node@v4
        with:
          node-version: '20.16.0'
          cache: 'npm'

      - name: Install dependencies
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        run: npm ci

      - name: Configure Git
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Bump version
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        run: |
          npm run release
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Push changes
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        run: |
          git push --follow-tags origin main

      - name: Create GitHub Release
        if: steps.check_version_bump.outputs.is_version_bump == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          tag_name: v${{ env.NEW_VERSION }}
          release_name: Release v${{ env.NEW_VERSION }}
          body: |
            See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false

  docker-build-and-push:
    needs: version-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/your-image-name:latest
            ${{ secrets.DOCKER_USERNAME }}/your-image-name:${{ steps.package-version.outputs.current-version }}
          build-args: |
            NODE_ENV=production
