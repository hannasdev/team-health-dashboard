version: '3.8'

services:
  db:
    image: mongo:latest
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongodb.js:/docker-entrypoint-initdb.d/init-mongodb.js:ro
    command: mongod --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    deploy:
      resources:
        limits:
          memory: 1536M # 1.5GB

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=production
      - DATABASE_URL=mongodb://root:example@db:27017/myapp?authSource=admin
    env_file:
      - .env
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1536M # 1.5GB

  unit-test-runner:
    build:
      context: .
      target: unit-test
    volumes:
      - node_modules:/app/node_modules
    deploy:
      resources:
        limits:
          memory: 6G
    command:
      - sh
      - -c
      - |
        npm ci &&
        node --experimental-vm-modules --expose-gc --max-old-space-size=6000 node_modules/.bin/jest --runInBand --logHeapUsage --detectOpenHandles --config jest.config.ts

volumes:
  mongodb_data:
  node_modules:
